#include<bits/stdc++.h>
vector<int>bfsTraversal(int V,vector<vector<int>>&adj){
	vector<int>ans;
	vector<bool>vis(V,false);
	queue<int>q;
	vis[0] = true;
	q.push(0);
	
	while(!q.empty()){
		int node = q.front();
		q.pop();
		ans.push_back(node);
		for(auto it:adj[node]){
			if(!vis[it]){
				q.push(it);
				vis[it] = true;
			}
		}
	}
	return ans;
}
//Another sol - GFG
 vector<int> bfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        vector<int>bfs;
        vector<int>vis(V,0);
        queue<int>q;
        q.push(0);
        
        vis[0] =1;
        
        while(!q.empty()){
            int node = q.front();
            q.pop();
            bfs.push_back(node);
            
            for(int it:adj[node]){
                if(!vis[it]){
                    q.push(it);
                    vis[it] =1;
                }
            }
        }
        return bfs;
}