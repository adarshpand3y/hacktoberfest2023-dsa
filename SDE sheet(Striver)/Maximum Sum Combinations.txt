//using priority queue
vector<int> Solution::solve(vector<int> &A, vector<int> &B, int C) {
    sort(A.begin(),A.end());
    sort(B.begin(),B.end());
    
    priority_queue<pair<int,pair<int,int>>>pq;
    int n = A.size();
    vector<int>ans;
    for(int i=0;i<n;i++)
        pq.push({A[i]+B[n-1],{i,n-1}});
        while(!pq.empty() && C--){
            pair<int,pair<int,int>>tp= pq.top();
            int val = tp.first;
            int x = tp.second.first,y = tp.second.second;
            pq.pop();
            ans.push_back(val);
            if(y!=0)
            pq.push({A[x]+B[y-1],{x,y-1}});
        }
        return ans;
    }

