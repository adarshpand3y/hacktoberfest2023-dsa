//using DFS - codestudio
#include<bits/stdc++.h>
bool dfsCycle(int node,vector<int>&vis,vector<int>&pathVis,vector<int>adj[]){
	vis[node] =1;
	pathVis[node] = 1
	
	for(auto &it:adj[node]){
		if(!vis[it]){
			if(dfsCycle(it,vis,pathVis,adj)==true){
				return true;
			}
		}
		else if(pathVis[it]){
			return true;
		}
	}
	pathVis[node] =0;
		return false;
}
int detectCycleDirected(int n,vector<pair<int,int>>&edges){
	vector<int>adj[n+1];
	
	for(auto &it:edges){
		adj[it.first].push_back(it.second);
	}
	vector<int>vis(n+1,0);
	vector<int>pathVis(n+1,0);
	
	for(int i=1;i<=n;i++){
		if(!vis[i]){
			if(dfsCycle(i,vis,PathVis,adj)){
				return true;
			}
		}
	}
	return false;
}
