//Brute approach
#include<bits/stdc++.h>
using namespace std;
vector<int>findMissingRepeatingNumbers(vector<int>arr){
	int n = arr.size();
	int repeating =-1,missing = -1;
	
	for(int i=1;i<=n;i++){
		int cnt =0;
		for(int j=0;j<n;j++){
			if(arr[j]==i)
			cnt++;
		}
		
		if(cnt==2)
		repeating =i;
		else if(cnt==0)
		missing =i;
		
		if(repeating!=-1 && missing!=-1)
		break;
	}
	return {repeating,missing};
}
//Using hashing
vector<int>findMissingRepeatingNumbers(vector<int>&arr){
	int n = arr.size();
	int mp[n+1] = {0};
	
	for(int i=0;i<n;i++){
		mp[arr[i]]++;
	}
	
	int repeating =-1,missing =-1;
	for(int i=1;i<=n;i++){
		if(mp[i]==2)
		repeating =i;
		else if(mp[i]==0)
		missing =i;
		
		if(repeating!=-1 && missing!=-1)
		break;
	}
	return {repeating,missing};
}
