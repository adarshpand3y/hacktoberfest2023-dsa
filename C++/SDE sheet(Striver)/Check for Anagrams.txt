//brute approach
#include<bits/stdc++.h>
bool areAnagrams(string &str1,string &str2){
	int n = str1.length();
	int m = str2.length();
	
	if(n!=m){
	  return false;
	}
	
	sort(str1.begin(),str2.end());
	sort(str2.begin(),str2.end());
	
	for(int i=0;i<n;;i++){
		if(str[i]!=str2[i]){
			return false
		}
	}
	return true;
}
//hashing
#define NO_OF_CHARS 256
bool areAnagrams(string &str1,string &str2){
	int count[NO_OF_CHARS] ={0};
	int i;
	
	int n = str1.length();
	int m = str2.length();
	
	if(n!=m){
		return false;
	}
	
	for(i=0;i<n;i++){
		count[str1[i]]++;
		count[str2[i]]++;
	}
	for(i=0;i<NO_OF_CHARS;i++){
		if(count[i]){
			return false;
		}
	}
	return true;
}
//Another sol - IMP
bool areAnagram(string &str1, string &str2){
    if(str1.length()!=str2.length()) {
        return false;
    }
    int count[26]={0};
    for(int i=0;i<str1.length();i++) {
        count[str1[i]-'a']++;
        count[str2[i]-'a']--;
    }
    for(int i=0;i<26;i++) {
        if(count[i]>0) {
            return false;
        }
    }
    return true;
}