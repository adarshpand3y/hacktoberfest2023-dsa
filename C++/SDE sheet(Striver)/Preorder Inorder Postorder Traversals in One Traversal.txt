#include<bits/stdc++.h>
struct node{
	int val;
	struct node*left;
	struct node*right;
};
void allTraversal(node*root,vector<int>&pre,vector<int>&in,vector<int>&post){
	stack<pair<node*,int>>st;
	st.push({root,1});
	if(root==NULL)
	return;
	while(!st.empty()){
		auto it = st.top();
		st.pop();
		
	if(it.second==1){
		pre.push_back(it.first->val);
		it.second++;
		st.push(it);
		
		if(it.first->left!=NULL){
			st.push({it.first->left,1});
		}
	}
		else if(it.second==2){
			in.push_back(it.first->val);
			it.second++;
			st.push(it);
			
		if(it.first->right!=NULL){
			st.push({it.first->right,1});
		}
	}
	else{
		post.push_back(it.first->val);
		}
	}
}
struct node*newNode(int val){
	struct node*node = (struct node*)malloc(sizeof(struct node));
	node->val = val;
	node->left = NULL;
	node->right = NULL;
	return (node);
}