//brute approach
int maxProfit(vector<int>&arr){
	int maxPro = 0;
	int n = arr.size();
	
	for(int i=0;i<n;i++){
		for(int j=i+1;j<n;j++){
			if(arr[j]>arr[i]){
				maxPro = max(arr[j]-arr[i],maxPro);
			}
		}
	}
	return maxPro;
}
//Optimal solution
int maxProfit(vector<int>&arr){
	int n = arr.size();
	int maxPro = 0;
	int minPrice = INT_MAX;
	
	for(int i=0;i<arr.size();i++){
		minPrice = min(minPrice,arr[i]);
		maxPro = max(maxPro,arr[i]-minPrice);
	}
	return maxPro;
}